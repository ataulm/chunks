apply plugin: 'com.android.application'
apply plugin: 'com.novoda.build-properties'

buildProperties {
    fabric {
        file project.file('../fabric.properties')
    }
    signing {
        file project.file('../signing.properties')
    }
}

String MISSING_FABRIC_KEY = 'missing_fabric_key'
String fabricApiKey = buildProperties.fabric['apiKey'].or(MISSING_FABRIC_KEY).string
boolean shouldEnableFabric = fabricApiKey != MISSING_FABRIC_KEY
if (shouldEnableFabric) {
    apply plugin: 'io.fabric'
}

android {
    compileSdkVersion versions.androidSdk.compile
    buildToolsVersion versions.androidSdk.buildTools

    defaultConfig {
        applicationId 'com.ataulm.chunks'
        minSdkVersion versions.androidSdk.min
        targetSdkVersion versions.androidSdk.target
        versionCode 7
        versionName '1.1.1'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigBoolean 'SHOULD_ENABLE_FABRIC', shouldEnableFabric
        manifestPlaceholders = [
                fabricApiKey: fabricApiKey
        ]
    }

    signingConfigs {
        release {
            storeFile file(buildProperties.signing['storeFile'].or('/absolute/path/to/keystore/file').string)
            storePassword buildProperties.signing['storePassword'].or('password').string
            keyAlias buildProperties.signing['keyAlias'].or('keyalias').string
            keyPassword buildProperties.signing['keyPassword'].or('keypassword').string
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        lintConfig file("../lint-config.xml")
    }
}

dependencies {
    compile project(":core")

    compile libraries.accessibilitools
    annotationProcessor libraries.autoValue
    provided libraries.autoValue
    compile libraries.butterknife
    annotationProcessor libraries.butterknifeCompiler
    compile(libraries.crashlytics) { transitive = true }
    compile libraries.landingStrip
    compile libraries.rxAndroid
    compile libraries.supportAppCompatV7
    compile libraries.supportV13
    compile libraries.supportRecyclerview
    compile libraries.supportDesign
    compile libraries.viewPagerAdapter

    debugCompile libraries.espressoSupportExtras
    androidTestCompile(libraries.espressoSupport) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    androidTestCompile libraries.mockitoCore
    androidTestCompile libraries.dexmaker
    androidTestCompile libraries.dexmakerMockito
    androidTestCompile project(path: ':core', configuration: 'coreTestFixtures')

    // Android runner and rules support
    androidTestCompile(libraries.androidTestRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    // Espresso support
    androidTestCompile(libraries.androidEspressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}
