apply plugin: 'com.android.application'

def signingStoreFile = hasProperty('signingStoreFile') ? signingStoreFile : 'provide this in gradle.properties'
def signingStorePassword = hasProperty('signingStorePassword') ? signingStorePassword : 'provide this in gradle.properties'
def signingKeyAlias = hasProperty('signingKeyAlias') ? signingKeyAlias : 'provide this in gradle.properties'
def signingKeyPassword = hasProperty('signingKeyPassword') ? signingKeyPassword : 'provide this in gradle.properties'

android {
    compileSdkVersion versions.androidSdk.compile
    buildToolsVersion versions.androidSdk.buildTools

    defaultConfig {
        applicationId "com.ataulm.chunks"
        minSdkVersion versions.androidSdk.min
        targetSdkVersion versions.androidSdk.target
        versionCode 4
        versionName "1.0.4"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(signingStoreFile)
            storePassword signingStorePassword
            keyAlias signingKeyAlias
            keyPassword signingKeyPassword
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        lintConfig file("../lint-config.xml")
    }
}

dependencies {
    compile project(":core")

    compile libraries.supportAppCompatV7
    compile libraries.supportV13
    compile libraries.supportRecyclerview
    compile libraries.supportDesign

    compile libraries.rxAndroid
    compile libraries.accessibilitools
    compile libraries.landingStrip
    compile libraries.viewPagerAdapter
    compile libraries.butterknife
    annotationProcessor libraries.butterknifeCompiler

    annotationProcessor libraries.autoValue
    provided libraries.autoValue

    debugCompile libraries.espressoSupportExtras
    androidTestCompile(libraries.espressoSupport) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile libraries.mockitoCore
    androidTestCompile libraries.dexmaker
    androidTestCompile libraries.dexmakerMockito
    androidTestCompile project(path: ':core', configuration: 'coreTestFixtures')

    // Android runner and rules support
    androidTestCompile(libraries.androidTestRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    // Espresso support
    androidTestCompile(libraries.androidEspressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}
